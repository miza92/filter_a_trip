{"ast":null,"code":"var _jsxFileName = \"/home/miri/Bureau/tictactrip_test/tictactrip_test/src/components/Page.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import User from './User.js';\n\nexport default class Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      users: []\n    };\n  }\n\n  componentDidMount() {\n    const url1 = [\"https://jsonplaceholder.typicode.com/posts\"];\n    const url2 = [\"https://jsonplaceholder.typicode.com/users\"];\n    Promise.all([fetch(url1), fetch(url2)]).then(([res1, res2]) => {\n      return Promise.all([res1.json(), res2.json()]);\n    }).then(([res1, res2]) => {\n      this.setState({\n        lists: res1,\n        users: res2\n      });\n      console.log(this.state.lists[0].id);\n      console.log(this.state.users[1].name);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Titre\"), React.createElement(\"th\", {\n      colSpan: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Action\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Nom de l'auteur\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.lists.map(list => React.createElement(\"tr\", {\n      key: list.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, list.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btn btn-warning\",\n      to: \"/post/\".concat(list.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"pe-7s-pen\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Voir le post\"))), this.state.users.map(user => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      key: list.userId,\n      value: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, user.name)))))))));\n  }\n\n}","map":{"version":3,"sources":["/home/miri/Bureau/tictactrip_test/tictactrip_test/src/components/Page.js"],"names":["React","Link","Page","Component","constructor","props","state","lists","users","componentDidMount","url1","url2","Promise","all","fetch","then","res1","res2","json","setState","console","log","id","name","render","map","list","title","user","userId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n// import User from './User.js';\n\nexport default class Page extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      users: []\n    }\n  }\n \n  componentDidMount() {\n  const url1 = [\n    \"https://jsonplaceholder.typicode.com/posts\",\n  ];\n  const url2 = [\n    \"https://jsonplaceholder.typicode.com/users\",\n  ];\n  Promise.all([fetch(url1), fetch(url2)])\n  .then(([res1, res2]) => { \n     return Promise.all([res1.json(), res2.json()]) \n  })\n  .then(([res1, res2]) => {\n    this.setState({\n      lists: res1,\n      users: res2\n    })\n    console.log(this.state.lists[0].id)\n    console.log(this.state.users[1].name)\n  });\n\n  }\n  render() {\n    return (\n    <div id=\"page\">\n      <div className=\"container\">\n        <table className=\"table table-striped container\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Titre</th>\n              <th colSpan=\"1\">Action</th>\n              <th scope=\"col\">Nom de l'auteur</th>\n            </tr>\n          </thead>\n          <tbody> \n          {this.state.lists.map((list) =>\n          <tr key={list.id}>\n            <td>{list.title}</td>\n            <td>\n              <Link className=\"btn btn-warning\" to={`/post/${list.id}`}>\n                <i className=\"pe-7s-pen\">Voir le post</i>\n              </Link>\n            </td>\n            {/* <td ><User   /></td> */}\n            {/* <td >{this.state.users[0].name}</td> */}\n            {/* <td>{this.state.list.name}</td> */}\n            {this.state.users.map((user) => \n            <tr>\n            <td key={list.userId} value={user.id}>\n              {user.name} \n            </td>\n            </tr>\n             )}  \n          </tr>\n          )}\n          </tbody> \n        </table>\n        </div>\n    </div>\n  )}\n}"]},"metadata":{},"sourceType":"module"}